worker_processes 8;

error_log /usr/local/nginx/logs/error.log debug;

events {
	worker_connections 1024;
}

rtmp_auto_push on;

rtmp {
	server {
		listen 1935;

		application stream {
			live on;
			record off;
			record_path /usr/local/nginx/vod;
			allow publish all;
			allow play 127.0.0.1;
			deny play all;

			on_publish http://localhost:4000/api/start_stream;
			on_publish_done http://localhost:4000/api/stop_stream;
		}

		application hls {
			live on;
			hls on;
			hls_fragment 2;
			hls_playlist_length 10;
			hls_path /usr/local/nginx/hls;
			hls_nested on;
			hls_variant _108060 BANDWIDTH=6000000,RESOLUTION=1920x1080,FRAME-RATE=60.000;
			hls_variant _108030 BANDWIDTH=5000000,RESOLUTION=1920x1080,FRAME-RATE=30.000;
			hls_variant _72060 BANDWIDTH=4500000,RESOLUTION=1280x720,FRAME-RATE=60.000;
			hls_variant _72030 BANDWIDTH=4000000,RESOLUTION=1280x720,FRAME-RATE=30.000;
			hls_variant _48030 BANDWIDTH=2000000,RESOLUTION=852x480,FRAME-RATE=30.000;
			allow publish 127.0.0.1;
			deny publish all;
			allow play 127.0.0.1;
			deny play all;
		}

		application vod {
			play /usr/local/nginx/vod;
			deny publish all;
			allow play 127.0.0.1;
			deny play all;
		}
	}
}

http {
	sendfile off;
	tcp_nopush on;
	tcp_nodelay on;
	aio on;
	directio 512;
	keepalive_timeout 65;
	server_tokens off;

	include /usr/local/nginx/conf/mime.types;
	default_type application/octet-stream;

	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name streamcaster.me www.streamcaster.me stream.streamcaster.me;
		return 301 https://streamcaster.me$request_uri;
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name www.streamcaster.me stream.streamcaster.me;
		return 301 https://streamcaster.me$request_uri;
	}

	server {
		listen 443 ssl http2 default_server;
		listen [::]:443 ssl http2 default_server;
		include /usr/local/nginx/snippets/ssl-streamcaster.me.conf;
		include /usr/local/nginx/snippets/ssl-params.conf;
		server_name streamcaster.me;

		location / {
			proxy_pass http://localhost:3000;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location /api {
			proxy_pass http://localhost:4000;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location /live {
			types {
				application/vnd.apple.mpegurl m3u8;
			}
			alias hls;
		}

		location ^~ /.well-known/acme-challenge {
			allow all;
			root /usr/local/nginx/html;
		}
	}
}
